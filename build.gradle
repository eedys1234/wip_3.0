buildscript {
    ext {
        springBootVersion = '2.1.7.RELEASE'
    }

    //script block - closer
    //domain object delegate
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    //script block - closer
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.1.1"
    }
}

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "org.sonarqube"

group 'org.wip.bool'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok' //의존성 충돌나기 때문에
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile group:'io.springfox', name:'springfox-swagger2',version: '2.9.2'
    compile  group:'io.springfox', name:'springfox-swagger-ui',version: '2.9.2'
    compile  'org.springframework.boot:spring-boot-starter-log4j2'
    compile  group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.9.2'
    compile 'com.h2database:h2'
    compile "com.querydsl:querydsl-jpa"
    compile "com.querydsl:querydsl-core"
    compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0'
    compile 'org.springframework.boot:spring-boot-starter-oauth2-client'
    compile 'io.jsonwebtoken:jjwt:0.9.1'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa" // querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:2.2.3"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api:1.3.5"
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.springframework.security:spring-security-test'
}

//querydsl 적용
def querydslSrcDir = 'src/main/generated'

sourceSets {
    main.java.srcDirs += [ querydslSrcDir ]
    main {

        resources {
            srcDirs("src/main/resources", "src/main/resources/profiles")
        }
    }
}

bootRun {
    String activeProfile = System.properties['spring.profiles.active']
    println "zone: ${activeProfile}"
    systemProperty "spring.profiles.active", activeProfile
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslSrcDir)
}

clean.doLast {
    file(querydslSrcDir).deleteDir()
}
